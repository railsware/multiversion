#!/usr/bin/env ruby

MULTIVERSION_RSPEC_PATH = File.expand_path('../multiversion-rspec', __FILE__)

def print_usage
  puts "Main command:"
  puts "multiversion [all|version1,version2,...] exec command [args]"
  puts "Helpers:"
  puts "multiversion [all|version1,version2,...] rspec [rspec args]"
  puts "multiversion [all|version1,version2,...] bundle [bundle args]"
  abort
end

def get_gemfile_versions
  Dir['Gemfile.*'].select { |file|
    file !~ /\.lock$/
  }.map { |gemfile|
    gemfile.scan(/Gemfile\.(.*)/)
  }.flatten.sort
end

def check_rvm_aliases(aliases)
  rvm_aliases = `rvm alias list`.split("\n").map { |line| line.split("=>").first.strip }
  unknown_aliases = aliases - rvm_aliases
  abort "Unknown rvm aliases: #{unknown_aliases.inspect} " unless unknown_aliases.empty?
end

def execute_with_rvm_bundle(version, bundle_args)
  gemfile="Gemfile.#{version}"

  puts "***"
  puts "*** Executing with RVM '#{version}' and BUNDLE_GEMFILE '#{gemfile}'"
  puts "***"

  cmd_name = 'rvm'
  cmd_args = [ version, 'exec', 'bundle' ] + bundle_args

  cmd_string = "export BUNDLE_GEMFILE=#{gemfile} && #{cmd_name}"
  cmd_args.each { |arg|
    cmd_string << ' ' << "'#{arg}'"
  }

  p cmd_string if ENV['MULTIVERSION_DEBUG']

  system cmd_string
end


version = ARGV.shift
command = ARGV.shift

bundle_args = 
  case command
  when "bundle"
    ARGV
  when "rspec"
    ["exec", MULTIVERSION_RSPEC_PATH] + ARGV
  when "exec"
    ["exec"] + ARGV
  else
    []
  end

if bundle_args.empty?
  print_usage 
else
  versions =  version == 'all' ?
    get_gemfile_versions : version.split(',')

  check_rvm_aliases(versions)

  versions.each do |version|
    execute_with_rvm_bundle(version, bundle_args)
  end
end

